# LEGACY REIMBURSEMENT SYSTEM REVERSE ENGINEERING
## Working Hypotheses Document v1.3
Last Updated: June 7, 2:20 PM

---

## STATUS LEGEND
- üü¢ CONFIRMED - Tested and verified with high confidence
- üü° LIKELY - Strong evidence but needs more testing  
- üîµ TESTING - Currently investigating
- ‚ö™ UNTESTED - Hypothesis from interviews, not yet tested
- üî¥ DISPROVEN - Tested and found to be false
- ‚ùì UNCLEAR - Conflicting evidence

---

## 1. BASE CALCULATION COMPONENTS

### 1.1 Per Diem Rate
- ‚ùì **BASE_RATE**: $100/day standard per diem
  - Source: Lisa (accounting)
  - Test: Linear regression shows $61.51/day + $915.87 intercept
  - Evidence: Mean per diem is $284.71, median $187.58 - NOT a simple $100/day
  - **NEW HYPOTHESIS**: High intercept ($915.87) suggests minimum base amount
  - **UPDATE**: v0.4 model uses $50.05/day coefficient successfully
  - **CONFLICTING**: Interview vs data analysis

### 1.2 Mileage Rate  
- ‚ùì **MILEAGE_TIERS**: 
  - First 100 miles: ~$0.58/mile
  - After 100 miles: Decreasing rate (curve unknown)
  - Source: Lisa, Marcus
  - Formula to test: `if miles <= 100: miles * 0.58 else: 100 * 0.58 + (miles - 100) * rate_function`
  - Evidence: Miles has WEAKEST correlation (0.432), not strongest as interviews suggested
  - **NEEDS REVISION**: Mileage might be less important than thought
  - **UPDATE**: Linear model uses $0.446/mile successfully
  - **NOTE**: Tiered structure might exist for specific users/cases

### 1.3 Receipt Processing
- üü¢ **RECEIPT_DOMINANCE**: Receipts are the PRIMARY driver
  - Evidence: Highest correlation (0.704) - stronger than days or miles
  - **NEW FINDING**: Receipt processing is the core of the system

- ‚ùì **INVERTED RECEIPT COVERAGE**: Low receipts get massive multipliers
  - Evidence: <$10 receipts get 6,599% coverage, >$2000 get 73% coverage
  - Receipt coverage follows inverse relationship with amount
  - **UPDATE**: v0.2 model using this performed poorly overall
  - **BUT**: Worked excellently for specific trip profiles
  - **KEEP**: Might be user or context specific

- üü¢ **CRITICAL THRESHOLDS**: Major behavioral changes at very low amounts
  - $6, $11, $13, $23, $36 (from decision tree)
  - $50 threshold shows 95% drop in coverage ratio
  - System designed to subsidize minimal expenses
  - **NOTE**: These thresholds might vary by context

---

## 2. BONUS/PENALTY MODIFIERS

### 2.1 Trip Duration Bonuses
- ‚ùì **5_DAY_BONUS**: 5-day trips get special bonus
  - Source: Lisa, Kevin (high confidence)
  - Exceptions: Lisa saw one case without bonus
  - Test: Filter all 5-day trips and check for consistent bonus
  - Formula: `if trip_days == 5: base * 1.X`
  - Evidence: 5-day mean ($1,272.59) is LOWER than 6-day ($1,366.48)
  - **AGGREGATE**: No clear 5-day bonus in overall data
  - **KEEP**: Might be user-specific or conditional

- ‚ùì **SWEET_SPOT_4_6_DAYS**: 4-6 day trips optimal
  - Source: Multiple employees
  - Test: Compare average reimbursement by trip length
  - Evidence: Progressive increase from 1-7 days, then plateau
  - **NEEDS REVISION**: Pattern is more linear than expected
  - **BUT**: Specific profiles show non-linear behavior

### 2.2 Efficiency Bonuses/Penalties
- ‚ùì **EFFICIENCY_SWEET_SPOT**: 180-220 miles/day optimal
  - Source: Kevin (tested extensively)
  - Formula: `efficiency_bonus = f(miles/days)` with peak at 180-220
  - Test: Calculate miles/day and plot against residuals
  - Evidence: 180-220 range ($1,318.86) is LOWER than 100-180 ($1,505.96)
  - **AGGREGATE**: Kevin's sweet spot actually underperforms!
  - **IMPORTANT**: Kevin tracked 247 submissions - might be personal pattern

- ‚ùì **HIGH_EFFICIENCY_PENALTY**: >400 miles/day penalized
  - Source: Kevin
  - Test: Find trips with >400 miles/day
  - Evidence: 400+ mi/day does have lowest mean ($1,082.39)
  - **PARTIALLY CONFIRMED**: But the pattern is different than expected

### 2.3 Spending Thresholds
- ‚ö™ **SPENDING_CAPS_BY_DURATION**:
  - Short trips (1-3 days): <$75/day optimal
  - Medium trips (4-6 days): <$120/day optimal  
  - Long trips (7+ days): <$90/day optimal
  - Source: Kevin
  - Test: Group by duration, calculate spending/day, check patterns
  - Evidence: Not yet tested in models

- üü¢ **LOW_RECEIPT_PENALTY**: <$50 receipts worse than $0
  - Source: Dave, Jennifer
  - Test: Compare low receipt trips vs zero receipt trips
  - Evidence: <$50 mean: $553.74 vs >=$50 mean: $1,376.26
  - **STRONGLY CONFIRMED**: Massive penalty for low receipts
  - **UPDATED**: Actually an INVERTED COVERAGE system - low gets multiplied, high gets capped
  - **v0.4**: Implements as reduced coverage (0.8x) for $10-50 range

---

## 3. SPECIAL RULES & BUGS

### 3.1 Rounding Bug
- üü¢ **CENTS_49_99_PENALTY**: Receipts ending in .49 or .99 get PENALIZED
  - Source: Lisa (claimed bonus)
  - Test: `if receipts % 1 in [0.49, 0.99]: bonus`
  - Evidence: .49 endings: -65.9% vs average, .99 endings: -49.0% vs average
  - **CONFIRMED BUT REVERSED**: This "bug" actually PENALIZES these amounts severely
  - **v0.4**: Implemented as 0.35x and 0.51x multipliers

### 3.2 Timing Effects  
- ‚ö™ **DAY_OF_WEEK**: Tuesday 8% better than Friday
  - Source: Kevin (247 submissions tracked)
  - Test: Add submission day to analysis
  - Evidence: Cannot test without dates
  - **KEEP**: Kevin's detailed tracking suggests this is real for him

- ‚ö™ **Q4_BONUS**: End of Q4 more generous
  - Source: Marcus (3 years observed)
  - Test: Need submission dates
  - Evidence: Cannot test without dates

- ‚ö™ **LUNAR_CYCLE**: New moon 4% better
  - Source: Kevin
  - Test: Need submission dates + moon phase data
  - Evidence: Cannot test without dates
  - **NOTE**: Sounds unlikely but Kevin has data

---

## 4. INTERACTION EFFECTS

### 4.1 Magic Combinations
- ‚ùì **KEVIN_SWEET_SPOT**: 5 days + 180-220 mi/day + <$100/day spending
  - Source: Kevin
  - Test: Find all trips matching criteria
  - Evidence: Mean $956.14 vs overall $1,349.11 - UNDERPERFORMS!
  - **AGGREGATE**: Kevin's "guaranteed bonus" actually gets less
  - **BUT**: Might work for Kevin specifically

### 4.2 General Interactions
- ‚ö™ **HIGH_MILES_LOW_SPEND**: Positive interaction
- ‚ö™ **LOW_MILES_HIGH_SPEND**: Negative interaction
  - Test: Create interaction terms in model
  - Evidence: Not yet tested

---

## 5. SYSTEM BEHAVIORS

### 5.1 Calculation Paths
- üîµ **MULTIPLE_PATHS**: 6 different calculation paths
  - Source: Kevin (k-means clustering)
  - Test: Run clustering analysis on our data
  - Evidence: Found one special path (7-8 day, ~1000 mile trips)
  - **PROMISING**: More paths likely exist

### 5.2 User History
- ‚ö™ **HISTORY_EFFECT**: System remembers past submissions
  - Source: Marcus, Kevin
  - Test: Need user ID and submission history
  - Evidence: Cannot test without user data
  - **IMPORTANT**: Could explain individual vs aggregate differences

### 5.3 Base Amount Theory
- üîµ **MINIMUM_BASE**: ~$915 base amount before other calculations
  - Evidence: High intercept in regression
  - Test: Look for cases with minimal inputs
  - **UPDATE**: Low receipt cases get ~$226 (very low) to $658 (low), not $915
  - **v0.4**: Uses $266.71 as base intercept
  - **KEEP INVESTIGATING**: Multiple base amounts possible

---

## 6. NEW DISCOVERIES FROM DATA

### 6.1 Special Trip Profile
- üü¢ **HIGH_VALUE_BUSINESS_TRIPS**: 7-8 days, ~1000 miles, ~1000-1200 receipts
  - Evidence: v0.2 model accurate within $7-43 for these 4 cases
  - Output: Consistently ~$2100-2300
  - Formula: Different calculation method
  - **THEORY**: Executive/important client trips?
  - **v0.4**: Implements special handling for this profile

### 6.2 Model Performance Tracking
- **v0.1 (baseline linear)**: MAE $175.50, MAPE 17.8%
  - Simple linear: 266.71 + 50.05*days + 0.446*miles + 0.383*receipts
  
- **v0.2 (inverted coverage)**: MAE $610.63, MAPE 57.5%
  - Failed overall but revealed special cases
  - Excellent for specific trip profile only
  
- **v0.3 (hybrid)**: MAE $236.25, MAPE 22.4%
  - Overcorrected, worse than baseline
  
- **v0.4 (refined)**: MAE $167.40, MAPE 16.2% ‚ú®
  - Best performance so far
  - Special handling for 7-8 day high-value trips
  - Receipt ending penalties implemented
  - Low receipt adjustments

---

## 7. KEY QUESTIONS TO RESOLVE

1. Why do employee perceptions differ so much from aggregate data?
   - User-specific rules?
   - Department differences?
   - System evolution over time?

2. Is there a receipt cap or diminishing returns function?
   - Evidence suggests yes, but formula unclear

3. What drives the special trip profiles?
   - Only found one so far
   - Kevin's clustering suggests 5 more

4. Are there user/department/time-specific variations?
   - Would explain Kevin vs aggregate differences

5. Why do .49/.99 endings get penalized (opposite of claimed)?
   - Anti-fraud measure?
   - Encourage business expenses?

---

## 8. TESTING LOG

### Test 001: Initial Analysis Comparison
- Date: June 7, 1:44 PM
- Method: Compared interview hypotheses to aggregate statistics
- Result: Major discrepancies found
- Conclusion: Need to revise approach, focus on receipts

### Test 002: Deep Receipt Analysis
- Date: June 7, 2:01 PM
- Method: Comprehensive receipt analysis with multiple models
- Result: Discovered inverse coverage system with critical low thresholds
- Conclusion: System designed to subsidize low-expense trips, penalize high expenses

### Test 003: Model Development and Testing
- Date: June 7, 2:20 PM
- Method: Developed 4 model versions, tested on public data
- Result: v0.4 achieves 16.2% MAPE, 4.4% improvement over baseline
- Conclusion: Special trip profiles and receipt penalties are real

---

## 9. NEXT STEPS

1. **Test remaining hypotheses**
   - Spending caps by duration
   - Interaction effects
   - More special profiles

2. **Investigate user-specific patterns**
   - Why Kevin's patterns don't match aggregate
   - Need user ID if available

3. **Look for more calculation paths**
   - Kevin identified 6, we found 1
   - Clustering on residuals

4. **Time-based analysis**
   - If we can derive dates from patterns
   - Test Kevin's Tuesday theory

5. **Validate and refine**
   - Test v0.4 on holdout data
   - Look for systematic errors

---

## 10. WORKING FORMULA (v0.4)

```python
if (7 <= trip_days <= 8 and 900 <= miles <= 1200 and 1000 <= receipts <= 1200):
    # Special high-value trip profile
    reimbursement = 50 * trip_days + 0.4 * miles + receipts * 1.61
else:
    # Standard calculation
    base = 266.71 + 50.05 * trip_days + 0.446 * miles
    
    if receipts < 10:
        receipt_component = 100
    elif receipts < 50:
        receipt_component = receipts * 0.8
    else:
        receipt_component = receipts * 0.383
    
    reimbursement = base + receipt_component

# Apply receipt ending penalties
if receipts ends in .49: reimbursement *= 0.35
if receipts ends in .99: reimbursement *= 0.51
```

Current performance: MAE $167.40 (4.4% improvement over baseline)

---

## 11. NOTES & OBSERVATIONS
- Kevin's 30% improvement suggests optimization is possible
- System complexity suggests evolutionary development
- Randomization might be ~5-10% of variation (Lisa's observation)
- Employee theories might be correct for their specific contexts
- What works in aggregate might not work for individuals